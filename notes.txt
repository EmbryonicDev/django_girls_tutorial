Link to tutorial
   - https://tutorial.djangogirls.org/en

** Installing Django
 - First install virtual environment in folder where project will be held
    $ python3 -m venv myvenv
    ** myvenv can be named anything, keep it in lower case with no special characters
    - To work with myvenv, Start it by running:
        $ source myvenv/bin/activate
         - add myvenv folder to .gitignore
- Install Django:
 - first make sure upgrade pip is installed: 
    $ python -m pip install --upgrade pip
- Create requirements.txt in root folder
    - add to requirements.txt -> Django~=3.2.10
    - $ pip install -r requirements.txt
      - This will install Django

** Create project
   - django-admin startproject myprojectname
   - update TIME_ZONE in settings:
      - "Europe/Amsterdam"
      - for list of time zones: 
         https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
   - Add to settings below STATIC_URL:
      - STATIC_ROOT = BASE_DIR / 'static'
   - Add to settings ALLOWED_HOSTS: 
      - ['127.0.0.1', '.pythonanywhere.com']
   
** Database
   ** Set up databases
   - $ python manage.py migrate

   ** Start server:
      - python manage.py runserver

   ** Creating an app:
      - python manage.py startapp blog

   ** Create class Post as a model:
      - blogs/models.py

   ** Create tables for models in database:
      - python manage.py makemigrations blog
   ** Apply to database:
      - python manage.py migrate blog

** Django admin
   ** Register Post model in blog/admin:
   ** Create superuser in terminal:
      - $ python manage.py createsuperuser
    
    ** Add four blog posts via admin interface

** Django URLs
   ** Add to mysite/urls.py:
      - path('', include('blog.urls')),
   ** Create blog/urls.py, then add to urlpatterns:
      - path('', view.post_list, name='post_list'),
   ** Add to blog/views.py:
      - def post_list

** html
   - Create blog/templates/blog/post_list.html
   - Populate new html file with static code for now

** To add new Post models via Django shell:
   - $ python manage.py shell
   - $ from blog.models import Post
   - $ Post.objects.all()
      - Displays all Post objects
   - $ from django.contrib.auth.models import User
   - $ User.objects.all()
      - Displays superuser created earlier
   - $ me = User.objects.get(username='admin')
   - $ Post.objects.create(author=me, title='Sample title', text='Test')
      - new post created
   - To filter items:
      - $ Post.objects.filter(title='First Title')
      - $ Post.objects.filter(title__contains='First')
      - $ Post.objects.filter(published_date__lte=timezone.now())
         - lte = later than or equal to
   - Publish a post:
      - post = Post.objects.get(title='Second Title')
      - post.publish
   - Sort objects by created_date:
      - Post.objects.order_by('created_date)
         - Reversed order:
         - Post.objects.order_by('-created_date)
   - Complex queries through method-chaining
      - Post.objects.filter(published_date__lte=timezone.now()).order_by('published_date')
   
** Dynamic data in templates
   - Import Post model to blog/views.py
   - modify def post_list by adding:
      - posts = Post.objects.filter(published_date__lte=timezone.now()).order_by('published_date')
   - also update last argument of the return line:
      - {'posts' = posts}

** Django templates
 - Modify post_list.html template to display posts from database.
   - Check file for details
   

      






